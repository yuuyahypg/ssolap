// Code generated by protoc-gen-go.
// source: olap.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	olap.proto

It has these top-level messages:
	OlapRequest
	OlapResult
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type OlapRequest struct {
	Request string `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
}

func (m *OlapRequest) Reset()                    { *m = OlapRequest{} }
func (m *OlapRequest) String() string            { return proto1.CompactTextString(m) }
func (*OlapRequest) ProtoMessage()               {}
func (*OlapRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OlapRequest) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

type OlapResult struct {
	Tuple map[string]string `protobuf:"bytes,2,rep,name=tuple" json:"tuple,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *OlapResult) Reset()                    { *m = OlapResult{} }
func (m *OlapResult) String() string            { return proto1.CompactTextString(m) }
func (*OlapResult) ProtoMessage()               {}
func (*OlapResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OlapResult) GetTuple() map[string]string {
	if m != nil {
		return m.Tuple
	}
	return nil
}

func init() {
	proto1.RegisterType((*OlapRequest)(nil), "proto.OlapRequest")
	proto1.RegisterType((*OlapResult)(nil), "proto.OlapResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Olap service

type OlapClient interface {
	GetResult(ctx context.Context, in *OlapRequest, opts ...grpc.CallOption) (Olap_GetResultClient, error)
}

type olapClient struct {
	cc *grpc.ClientConn
}

func NewOlapClient(cc *grpc.ClientConn) OlapClient {
	return &olapClient{cc}
}

func (c *olapClient) GetResult(ctx context.Context, in *OlapRequest, opts ...grpc.CallOption) (Olap_GetResultClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Olap_serviceDesc.Streams[0], c.cc, "/proto.Olap/GetResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &olapGetResultClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Olap_GetResultClient interface {
	Recv() (*OlapResult, error)
	grpc.ClientStream
}

type olapGetResultClient struct {
	grpc.ClientStream
}

func (x *olapGetResultClient) Recv() (*OlapResult, error) {
	m := new(OlapResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Olap service

type OlapServer interface {
	GetResult(*OlapRequest, Olap_GetResultServer) error
}

func RegisterOlapServer(s *grpc.Server, srv OlapServer) {
	s.RegisterService(&_Olap_serviceDesc, srv)
}

func _Olap_GetResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OlapRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OlapServer).GetResult(m, &olapGetResultServer{stream})
}

type Olap_GetResultServer interface {
	Send(*OlapResult) error
	grpc.ServerStream
}

type olapGetResultServer struct {
	grpc.ServerStream
}

func (x *olapGetResultServer) Send(m *OlapResult) error {
	return x.ServerStream.SendMsg(m)
}

var _Olap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Olap",
	HandlerType: (*OlapServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetResult",
			Handler:       _Olap_GetResult_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "olap.proto",
}

func init() { proto1.RegisterFile("olap.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xcf, 0x49, 0x2c,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xea, 0x5c, 0xdc, 0xfe, 0x40,
	0xc1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x09, 0x2e, 0xf6, 0x22, 0x08, 0x53, 0x82,
	0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc6, 0x55, 0xaa, 0xe2, 0xe2, 0x82, 0x28, 0x2c, 0x2e, 0xcd,
	0x29, 0x11, 0x32, 0xe2, 0x62, 0x2d, 0x29, 0x2d, 0xc8, 0x49, 0x95, 0x60, 0x52, 0x60, 0xd6, 0xe0,
	0x36, 0x92, 0x81, 0x18, 0xaa, 0x87, 0x50, 0xa1, 0x17, 0x02, 0x92, 0x76, 0xcd, 0x2b, 0x29, 0xaa,
	0x0c, 0x82, 0x28, 0x95, 0xb2, 0xe0, 0xe2, 0x42, 0x08, 0x0a, 0x09, 0x70, 0x31, 0x67, 0xa7, 0x56,
	0x42, 0x6d, 0x01, 0x31, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x41, 0x66, 0x82, 0xc4,
	0x20, 0x1c, 0x2b, 0x26, 0x0b, 0x46, 0x23, 0x3b, 0x2e, 0x16, 0x90, 0xc9, 0x42, 0x66, 0x5c, 0x9c,
	0xee, 0xa9, 0x25, 0x50, 0x27, 0x08, 0xa1, 0xd8, 0x09, 0x76, 0xa4, 0x94, 0x20, 0x86, 0x3b, 0x94,
	0x18, 0x0c, 0x18, 0x93, 0xd8, 0xc0, 0xa2, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0x6b,
	0xa0, 0x3d, 0x00, 0x01, 0x00, 0x00,
}
